package com.nsu.assessvulnerability;

import android.annotation.SuppressLint;
import android.content.Context;
import android.os.AsyncTask;

import org.json.JSONArray;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class SelectionFetchData extends AsyncTask<String, String, String> {
    String data = "";

    @SuppressLint("StaticFieldLeak")
    Context context;
    String type;

    public SelectionFetchData(Context context, String type) {
        this.context = context;
        this.type = type;
    }

    @Override
    protected String doInBackground(String... Strings) {
        try {
            URL url = new URL(Strings[0]);
            HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
            InputStream inputStream = httpURLConnection.getInputStream();
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));

            String line = "";
            while (line != null) {
                line = bufferedReader.readLine();
                data = data + line;
            }
            if (data.equals("[]null")) {
                return null;
            }
            try {
                JSONArray jsonArray = new JSONArray(data);
                for (int i = 0; i < jsonArray.length(); i++) {         // Extract data from JSON
                    JSONObject jsonObject = jsonArray.getJSONObject(i);
                    int id = Integer.parseInt(jsonObject.get("id").toString());
                    String bnName = jsonObject.get("bn_name").toString();
                    PlaceList placeList = new PlaceList(id, bnName);
                    save(type, placeList);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    private void save(String type, PlaceList placeList) {
        if (type.equals("District")) {
            SelectionActivity.districtList.add(placeList);
        } else if (type.equals("Upazila")) {
            SelectionActivity.upazilaList.add(placeList);
        } else if (type.equals("Union")) {
            SelectionActivity.unionList.add(placeList);
        }
    }

    @Override
    protected void onPostExecute(String aVoid) {
        super.onPostExecute(aVoid);
        SelectionActivity.selectionAdapter.notifyDataSetChanged();
    }
}