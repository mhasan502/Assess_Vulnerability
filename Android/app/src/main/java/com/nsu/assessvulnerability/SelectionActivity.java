package com.nsu.assessvulnerability;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

public class SelectionActivity extends AppCompatActivity {


    static SelectionAdapter selectionAdapter;
    static List<PlaceList> unionList = new ArrayList<>();
    static List<PlaceList> upazilaList = new ArrayList<>();
    static List<PlaceList> districtList = new ArrayList<>();
    static String[] areaSelection = new String[3];
    private Spinner districtSpinner, upazilaSpinner, unionSpinner;
    private Button registerButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_selection);

        districtSpinner = findViewById(R.id.district);
        upazilaSpinner = findViewById(R.id.upazila);
        unionSpinner = findViewById(R.id.union);
        registerButton = findViewById(R.id.register_button);

        loadDistrict();

    }

    private void loadDistrict() {
        districtList.add(new PlaceList(0, "Select District"));
        String districtURL = "https://assess-vulnerability.com/api/district";
        new SelectionFetchData(this, "District").execute(districtURL);
        selectionAdapter = new SelectionAdapter(this, districtList) {
            @Override
            public boolean isEnabled(int position) {
                if (position == 0)
                    return false;
                else
                    return true;
            }
        };
        districtSpinner.setAdapter(selectionAdapter);


        districtSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                PlaceList selectedDistrict = (PlaceList) parent.getSelectedItem();
                loadUpazila(selectedDistrict);
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
                Toast.makeText(getApplicationContext(), "Please Select", Toast.LENGTH_SHORT).show();
            }
        });
    }

    private void loadUpazila(PlaceList selectedDistrict) {
        upazilaList.clear();
        upazilaList.add(new PlaceList(0, "Select Upazila"));
        String upazilaURL = "https://assess-vulnerability.com/api/upazila/" + selectedDistrict.getId();
        new SelectionFetchData(this, "Upazila").execute(upazilaURL);


        selectionAdapter = new SelectionAdapter(this, upazilaList) {
            @Override
            public boolean isEnabled(int position) {
                if (position == 0)
                    return false;
                else
                    return true;
            }
        };
        upazilaSpinner.setAdapter(selectionAdapter);
        upazilaSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                PlaceList selectedUpazila = (PlaceList) parent.getSelectedItem();
                loadUnion(selectedUpazila, selectedDistrict);
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }
        });
    }

    private void loadUnion(PlaceList selectedUpazila, PlaceList selectedDistrict) {
        unionList.clear();
        unionList.add(new PlaceList(0, "Select Union"));
        String unionURL = "https://assess-vulnerability.com/api/union/" + selectedUpazila.getId();
        new SelectionFetchData(this, "Union").execute(unionURL);


        selectionAdapter = new SelectionAdapter(this, unionList) {
            @Override
            public boolean isEnabled(int position) {
                if (position == 0)
                    return false;
                else
                    return true;
            }
        };
        unionSpinner.setAdapter(selectionAdapter);
        unionSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                PlaceList selectedUnion = (PlaceList) parent.getSelectedItem();

                registerButton.setOnClickListener(v -> {
                    if ((selectedDistrict.getId() != 0) && (selectedUpazila.getId() != 0) && (selectedUnion.getId() != 0)) {
                        Intent surveyIntent = new Intent(getApplicationContext(), SurveyActivity.class);
                        postRequest(selectedDistrict.toString(), selectedUpazila.toString(), selectedUnion.toString());
                        startActivity(surveyIntent);
                    } else
                        Toast.makeText(getApplicationContext(), "Please select all fields", Toast.LENGTH_SHORT).show();
                });
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }
        });
    }

    public void postRequest(String district, String upazila, String union) {
        // replace with your host server URI
        String URL = "http://127.0.0.1:8000/api/user/";

        JSONObject postDataParams = new JSONObject();
        try {
            postDataParams.put("district", district);
            postDataParams.put("upazila", upazila);
            postDataParams.put("union", union);
        } catch (JSONException e) {
            e.printStackTrace();
        }

        APICaller apiCaller = new APICaller();
        apiCaller.Submit(URL, postDataParams.toString(), getApplicationContext());
    }
}